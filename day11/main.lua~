#!/usr/bin/env luajit

---@return integer[]

local input = arg[1] or "./day11/demo.txt"

local function read_file()
	local f = io.open(input)
	if not f then error("failed to read file", 2) end

	local l = f:read("*l") --[[@as string]]

	---@type integer[]
	local result = {}
	for d in l:gmatch("%d+") do
		table.insert(result, tonumber(d))
	end

	return result
end

local function part1()
	local numbers = read_file()

	local stones = { unpack(numbers) }
	for i = 1, 6 do
		local n = {}
		for _, stone in ipairs(stones) do
			if stone == 0 then
				table.insert(n, 0)
			else
				local ndigits = math.log10(stone) + 1
				if ndigits % 2 == 0 then
					local mid = ndigits / 2
					local unit = math.pow(10, mid)
					local l = math.floor(stone / unit) * unit
					local r = stone - l

					table.insert(n, l)
					table.insert(n, r)
				else
					table.insert(n, stone * 2024)
				end
			end
		end

		stones = n
	end
end

local function part2()
end

print("part 1", part1())
print("part 2", part2())
